<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: command.proto

namespace Io\Axoniq\Axonserver\Grpc\Command;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message describing a component's capability of handling a command type 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.command.CommandSubscription</code>
 */
class CommandSubscription extends \Google\Protobuf\Internal\Message
{
    /**
     * A unique identifier for this subscription. This identifier is returned in Acknowledgements to allow
     *pipelining of subscription messages 
     *
     * Generated from protobuf field <code>string message_id = 1;</code>
     */
    private $message_id = '';
    /**
     * The name of the command the component can handle 
     *
     * Generated from protobuf field <code>string command = 2;</code>
     */
    private $command = '';
    /**
     * The name/type of the component handling the command 
     *
     * Generated from protobuf field <code>string component_name = 3;</code>
     */
    private $component_name = '';
    /**
     * The unique identifier of the component instance subscribing 
     *
     * Generated from protobuf field <code>string client_id = 4;</code>
     */
    private $client_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $message_id
     *           A unique identifier for this subscription. This identifier is returned in Acknowledgements to allow
     *          pipelining of subscription messages 
     *     @type string $command
     *           The name of the command the component can handle 
     *     @type string $component_name
     *           The name/type of the component handling the command 
     *     @type string $client_id
     *           The unique identifier of the component instance subscribing 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Command::initOnce();
        parent::__construct($data);
    }

    /**
     * A unique identifier for this subscription. This identifier is returned in Acknowledgements to allow
     *pipelining of subscription messages 
     *
     * Generated from protobuf field <code>string message_id = 1;</code>
     * @return string
     */
    public function getMessageId()
    {
        return $this->message_id;
    }

    /**
     * A unique identifier for this subscription. This identifier is returned in Acknowledgements to allow
     *pipelining of subscription messages 
     *
     * Generated from protobuf field <code>string message_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMessageId($var)
    {
        GPBUtil::checkString($var, True);
        $this->message_id = $var;

        return $this;
    }

    /**
     * The name of the command the component can handle 
     *
     * Generated from protobuf field <code>string command = 2;</code>
     * @return string
     */
    public function getCommand()
    {
        return $this->command;
    }

    /**
     * The name of the command the component can handle 
     *
     * Generated from protobuf field <code>string command = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCommand($var)
    {
        GPBUtil::checkString($var, True);
        $this->command = $var;

        return $this;
    }

    /**
     * The name/type of the component handling the command 
     *
     * Generated from protobuf field <code>string component_name = 3;</code>
     * @return string
     */
    public function getComponentName()
    {
        return $this->component_name;
    }

    /**
     * The name/type of the component handling the command 
     *
     * Generated from protobuf field <code>string component_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setComponentName($var)
    {
        GPBUtil::checkString($var, True);
        $this->component_name = $var;

        return $this;
    }

    /**
     * The unique identifier of the component instance subscribing 
     *
     * Generated from protobuf field <code>string client_id = 4;</code>
     * @return string
     */
    public function getClientId()
    {
        return $this->client_id;
    }

    /**
     * The unique identifier of the component instance subscribing 
     *
     * Generated from protobuf field <code>string client_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setClientId($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_id = $var;

        return $this;
    }

}

