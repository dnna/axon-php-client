<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: command.proto

namespace Io\Axoniq\Axonserver\Grpc\Command;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An instruction from the components that provides the Command Handler towards AxonServer. 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.command.CommandProviderOutbound</code>
 */
class CommandProviderOutbound extends \Google\Protobuf\Internal\Message
{
    protected $request;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription $subscribe
     *           Instruction to subscribe this component as handler of a specific type of command 
     *     @type \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription $unsubscribe
     *           Instruction to unsubscribe this component as handler of a specific type of command 
     *     @type \Io\Axoniq\Axonserver\Grpc\FlowControl $flow_control
     *           Instruction to increase the number of instructions AxonServer may send to this component 
     *     @type \Io\Axoniq\Axonserver\Grpc\Command\CommandResponse $command_response
     *           Sends a result of Command processing 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Command::initOnce();
        parent::__construct($data);
    }

    /**
     * Instruction to subscribe this component as handler of a specific type of command 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.command.CommandSubscription subscribe = 1;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription
     */
    public function getSubscribe()
    {
        return $this->readOneof(1);
    }

    /**
     * Instruction to subscribe this component as handler of a specific type of command 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.command.CommandSubscription subscribe = 1;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription $var
     * @return $this
     */
    public function setSubscribe($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Instruction to unsubscribe this component as handler of a specific type of command 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.command.CommandSubscription unsubscribe = 2;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription
     */
    public function getUnsubscribe()
    {
        return $this->readOneof(2);
    }

    /**
     * Instruction to unsubscribe this component as handler of a specific type of command 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.command.CommandSubscription unsubscribe = 2;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription $var
     * @return $this
     */
    public function setUnsubscribe($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Command\CommandSubscription::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Instruction to increase the number of instructions AxonServer may send to this component 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.FlowControl flow_control = 3;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\FlowControl
     */
    public function getFlowControl()
    {
        return $this->readOneof(3);
    }

    /**
     * Instruction to increase the number of instructions AxonServer may send to this component 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.FlowControl flow_control = 3;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\FlowControl $var
     * @return $this
     */
    public function setFlowControl($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\FlowControl::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Sends a result of Command processing 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.command.CommandResponse command_response = 4;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Command\CommandResponse
     */
    public function getCommandResponse()
    {
        return $this->readOneof(4);
    }

    /**
     * Sends a result of Command processing 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.command.CommandResponse command_response = 4;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Command\CommandResponse $var
     * @return $this
     */
    public function setCommandResponse($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Command\CommandResponse::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRequest()
    {
        return $this->whichOneof("request");
    }

}

