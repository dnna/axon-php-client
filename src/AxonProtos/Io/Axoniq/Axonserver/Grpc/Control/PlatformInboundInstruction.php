<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: control.proto

namespace Io\Axoniq\Axonserver\Grpc\Control;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An instruction from Application Node to the AxonServer platform 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.control.PlatformInboundInstruction</code>
 */
class PlatformInboundInstruction extends \Google\Protobuf\Internal\Message
{
    protected $request;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Axoniq\Axonserver\Grpc\Control\ClientIdentification $register
     *           Information about the client being connected.
     *          This information is used by AxonServer to monitor the topology of connected applications.
     *     @type \Io\Axoniq\Axonserver\Grpc\Control\EventProcessorInfo $event_processor_info
     *           Information about Tracking Processors defined in the application.
     *          This information is used by AxonServer to monitor the progress of Tracking Processors across instances.
     *     @type \Io\Axoniq\Axonserver\Grpc\Control\Heartbeat $heartbeat
     *           This heartbeat is used by AxonServer in order to check if the connection is still alive
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Control::initOnce();
        parent::__construct($data);
    }

    /**
     * Information about the client being connected.
     *This information is used by AxonServer to monitor the topology of connected applications.
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.control.ClientIdentification register = 1;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Control\ClientIdentification
     */
    public function getRegister()
    {
        return $this->readOneof(1);
    }

    /**
     * Information about the client being connected.
     *This information is used by AxonServer to monitor the topology of connected applications.
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.control.ClientIdentification register = 1;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Control\ClientIdentification $var
     * @return $this
     */
    public function setRegister($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Control\ClientIdentification::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Information about Tracking Processors defined in the application.
     *This information is used by AxonServer to monitor the progress of Tracking Processors across instances.
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.control.EventProcessorInfo event_processor_info = 2;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Control\EventProcessorInfo
     */
    public function getEventProcessorInfo()
    {
        return $this->readOneof(2);
    }

    /**
     * Information about Tracking Processors defined in the application.
     *This information is used by AxonServer to monitor the progress of Tracking Processors across instances.
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.control.EventProcessorInfo event_processor_info = 2;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Control\EventProcessorInfo $var
     * @return $this
     */
    public function setEventProcessorInfo($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Control\EventProcessorInfo::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * This heartbeat is used by AxonServer in order to check if the connection is still alive
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 3;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Control\Heartbeat
     */
    public function getHeartbeat()
    {
        return $this->readOneof(3);
    }

    /**
     * This heartbeat is used by AxonServer in order to check if the connection is still alive
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.control.Heartbeat heartbeat = 3;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Control\Heartbeat $var
     * @return $this
     */
    public function setHeartbeat($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Control\Heartbeat::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRequest()
    {
        return $this->whichOneof("request");
    }

}

