<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: control.proto

namespace Io\Axoniq\Axonserver\Grpc\Control;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message containing connection information for an AxonServer Node 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.control.NodeInfo</code>
 */
class NodeInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * The host name to use when connecting to this node 
     *
     * Generated from protobuf field <code>string host_name = 1;</code>
     */
    private $host_name = '';
    /**
     * The port number for gRPC connections 
     *
     * Generated from protobuf field <code>int32 grpc_port = 2;</code>
     */
    private $grpc_port = 0;
    /**
     * The port number for HTTP connections 
     *
     * Generated from protobuf field <code>int32 http_port = 3;</code>
     */
    private $http_port = 0;
    /**
     * The version identifier of the API 
     *
     * Generated from protobuf field <code>int32 version = 4;</code>
     */
    private $version = 0;
    /**
     * The unique name of the node to connect with, for purpose of debugging 
     *
     * Generated from protobuf field <code>string node_name = 5;</code>
     */
    private $node_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $host_name
     *           The host name to use when connecting to this node 
     *     @type int $grpc_port
     *           The port number for gRPC connections 
     *     @type int $http_port
     *           The port number for HTTP connections 
     *     @type int $version
     *           The version identifier of the API 
     *     @type string $node_name
     *           The unique name of the node to connect with, for purpose of debugging 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Control::initOnce();
        parent::__construct($data);
    }

    /**
     * The host name to use when connecting to this node 
     *
     * Generated from protobuf field <code>string host_name = 1;</code>
     * @return string
     */
    public function getHostName()
    {
        return $this->host_name;
    }

    /**
     * The host name to use when connecting to this node 
     *
     * Generated from protobuf field <code>string host_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setHostName($var)
    {
        GPBUtil::checkString($var, True);
        $this->host_name = $var;

        return $this;
    }

    /**
     * The port number for gRPC connections 
     *
     * Generated from protobuf field <code>int32 grpc_port = 2;</code>
     * @return int
     */
    public function getGrpcPort()
    {
        return $this->grpc_port;
    }

    /**
     * The port number for gRPC connections 
     *
     * Generated from protobuf field <code>int32 grpc_port = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setGrpcPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->grpc_port = $var;

        return $this;
    }

    /**
     * The port number for HTTP connections 
     *
     * Generated from protobuf field <code>int32 http_port = 3;</code>
     * @return int
     */
    public function getHttpPort()
    {
        return $this->http_port;
    }

    /**
     * The port number for HTTP connections 
     *
     * Generated from protobuf field <code>int32 http_port = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setHttpPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->http_port = $var;

        return $this;
    }

    /**
     * The version identifier of the API 
     *
     * Generated from protobuf field <code>int32 version = 4;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * The version identifier of the API 
     *
     * Generated from protobuf field <code>int32 version = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkInt32($var);
        $this->version = $var;

        return $this;
    }

    /**
     * The unique name of the node to connect with, for purpose of debugging 
     *
     * Generated from protobuf field <code>string node_name = 5;</code>
     * @return string
     */
    public function getNodeName()
    {
        return $this->node_name;
    }

    /**
     * The unique name of the node to connect with, for purpose of debugging 
     *
     * Generated from protobuf field <code>string node_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setNodeName($var)
    {
        GPBUtil::checkString($var, True);
        $this->node_name = $var;

        return $this;
    }

}

