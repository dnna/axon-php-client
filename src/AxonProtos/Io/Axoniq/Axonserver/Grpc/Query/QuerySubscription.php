<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query.proto

namespace Io\Axoniq\Axonserver\Grpc\Query;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message containing details of a Registration of a Query Handler in a component
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.query.QuerySubscription</code>
 */
class QuerySubscription extends \Google\Protobuf\Internal\Message
{
    /**
     * The unique identifier of this Message 
     *
     * Generated from protobuf field <code>string message_id = 1;</code>
     */
    private $message_id = '';
    /**
     * The name of the Query the Handler is subscribed to 
     *
     * Generated from protobuf field <code>string query = 2;</code>
     */
    private $query = '';
    /**
     * The type of Result this Handler produces 
     *
     * Generated from protobuf field <code>string result_name = 3;</code>
     */
    private $result_name = '';
    /**
     * The name of the Component containing the Query Handler 
     *
     * Generated from protobuf field <code>string component_name = 4;</code>
     */
    private $component_name = '';
    /**
     * The unique identifier of the Client Instance containing the Query Handler 
     *
     * Generated from protobuf field <code>string client_id = 5;</code>
     */
    private $client_id = '';
    /**
     * The number of Query Handlers registered within this Component with the same details. This number is used to
     *calculate the number of candidates for Scatter-Gather Queries.
     *
     * Generated from protobuf field <code>int32 nr_of_handlers = 6;</code>
     */
    private $nr_of_handlers = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $message_id
     *           The unique identifier of this Message 
     *     @type string $query
     *           The name of the Query the Handler is subscribed to 
     *     @type string $result_name
     *           The type of Result this Handler produces 
     *     @type string $component_name
     *           The name of the Component containing the Query Handler 
     *     @type string $client_id
     *           The unique identifier of the Client Instance containing the Query Handler 
     *     @type int $nr_of_handlers
     *           The number of Query Handlers registered within this Component with the same details. This number is used to
     *          calculate the number of candidates for Scatter-Gather Queries.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * The unique identifier of this Message 
     *
     * Generated from protobuf field <code>string message_id = 1;</code>
     * @return string
     */
    public function getMessageId()
    {
        return $this->message_id;
    }

    /**
     * The unique identifier of this Message 
     *
     * Generated from protobuf field <code>string message_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMessageId($var)
    {
        GPBUtil::checkString($var, True);
        $this->message_id = $var;

        return $this;
    }

    /**
     * The name of the Query the Handler is subscribed to 
     *
     * Generated from protobuf field <code>string query = 2;</code>
     * @return string
     */
    public function getQuery()
    {
        return $this->query;
    }

    /**
     * The name of the Query the Handler is subscribed to 
     *
     * Generated from protobuf field <code>string query = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setQuery($var)
    {
        GPBUtil::checkString($var, True);
        $this->query = $var;

        return $this;
    }

    /**
     * The type of Result this Handler produces 
     *
     * Generated from protobuf field <code>string result_name = 3;</code>
     * @return string
     */
    public function getResultName()
    {
        return $this->result_name;
    }

    /**
     * The type of Result this Handler produces 
     *
     * Generated from protobuf field <code>string result_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setResultName($var)
    {
        GPBUtil::checkString($var, True);
        $this->result_name = $var;

        return $this;
    }

    /**
     * The name of the Component containing the Query Handler 
     *
     * Generated from protobuf field <code>string component_name = 4;</code>
     * @return string
     */
    public function getComponentName()
    {
        return $this->component_name;
    }

    /**
     * The name of the Component containing the Query Handler 
     *
     * Generated from protobuf field <code>string component_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setComponentName($var)
    {
        GPBUtil::checkString($var, True);
        $this->component_name = $var;

        return $this;
    }

    /**
     * The unique identifier of the Client Instance containing the Query Handler 
     *
     * Generated from protobuf field <code>string client_id = 5;</code>
     * @return string
     */
    public function getClientId()
    {
        return $this->client_id;
    }

    /**
     * The unique identifier of the Client Instance containing the Query Handler 
     *
     * Generated from protobuf field <code>string client_id = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setClientId($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_id = $var;

        return $this;
    }

    /**
     * The number of Query Handlers registered within this Component with the same details. This number is used to
     *calculate the number of candidates for Scatter-Gather Queries.
     *
     * Generated from protobuf field <code>int32 nr_of_handlers = 6;</code>
     * @return int
     */
    public function getNrOfHandlers()
    {
        return $this->nr_of_handlers;
    }

    /**
     * The number of Query Handlers registered within this Component with the same details. This number is used to
     *calculate the number of candidates for Scatter-Gather Queries.
     *
     * Generated from protobuf field <code>int32 nr_of_handlers = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setNrOfHandlers($var)
    {
        GPBUtil::checkInt32($var);
        $this->nr_of_handlers = $var;

        return $this;
    }

}

