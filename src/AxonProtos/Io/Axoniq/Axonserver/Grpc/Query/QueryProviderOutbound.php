<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query.proto

namespace Io\Axoniq\Axonserver\Grpc\Query;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message containing Query related instructions for Axon Server 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.query.QueryProviderOutbound</code>
 */
class QueryProviderOutbound extends \Google\Protobuf\Internal\Message
{
    protected $request;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription $subscribe
     *           Registers a Query Handler with AxonServer 
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription $unsubscribe
     *           Unregisters a Query Handler with AxonServer 
     *     @type \Io\Axoniq\Axonserver\Grpc\FlowControl $flow_control
     *           Grant permits to AxonServer to send a number of messages to the client 
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\QueryResponse $query_response
     *           Sends a Response to a Query received via the inbound stream 
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\QueryComplete $query_complete
     *           Indicator that all responses for Query have been sent 
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryResponse $subscription_query_response
     *           Sends a response for a Subscription Query that has been received via the inbound stream 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Registers a Query Handler with AxonServer 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QuerySubscription subscribe = 1;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription
     */
    public function getSubscribe()
    {
        return $this->readOneof(1);
    }

    /**
     * Registers a Query Handler with AxonServer 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QuerySubscription subscribe = 1;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription $var
     * @return $this
     */
    public function setSubscribe($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Unregisters a Query Handler with AxonServer 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QuerySubscription unsubscribe = 2;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription
     */
    public function getUnsubscribe()
    {
        return $this->readOneof(2);
    }

    /**
     * Unregisters a Query Handler with AxonServer 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QuerySubscription unsubscribe = 2;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription $var
     * @return $this
     */
    public function setUnsubscribe($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\QuerySubscription::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Grant permits to AxonServer to send a number of messages to the client 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.FlowControl flow_control = 3;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\FlowControl
     */
    public function getFlowControl()
    {
        return $this->readOneof(3);
    }

    /**
     * Grant permits to AxonServer to send a number of messages to the client 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.FlowControl flow_control = 3;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\FlowControl $var
     * @return $this
     */
    public function setFlowControl($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\FlowControl::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Sends a Response to a Query received via the inbound stream 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QueryResponse query_response = 4;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\QueryResponse
     */
    public function getQueryResponse()
    {
        return $this->readOneof(4);
    }

    /**
     * Sends a Response to a Query received via the inbound stream 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QueryResponse query_response = 4;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\QueryResponse $var
     * @return $this
     */
    public function setQueryResponse($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\QueryResponse::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Indicator that all responses for Query have been sent 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QueryComplete query_complete = 5;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\QueryComplete
     */
    public function getQueryComplete()
    {
        return $this->readOneof(5);
    }

    /**
     * Indicator that all responses for Query have been sent 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QueryComplete query_complete = 5;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\QueryComplete $var
     * @return $this
     */
    public function setQueryComplete($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\QueryComplete::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Sends a response for a Subscription Query that has been received via the inbound stream 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse subscription_query_response = 6;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryResponse
     */
    public function getSubscriptionQueryResponse()
    {
        return $this->readOneof(6);
    }

    /**
     * Sends a response for a Subscription Query that has been received via the inbound stream 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse subscription_query_response = 6;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryResponse $var
     * @return $this
     */
    public function setSubscriptionQueryResponse($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryResponse::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRequest()
    {
        return $this->whichOneof("request");
    }

}

