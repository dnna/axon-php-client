<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query.proto

namespace Io\Axoniq\Axonserver\Grpc\Query;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Queries or Query related instructions from AxonServer for the connected application 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.query.QueryProviderInbound</code>
 */
class QueryProviderInbound extends \Google\Protobuf\Internal\Message
{
    protected $request;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Axoniq\Axonserver\Grpc\Confirmation $confirmation
     *           Confirmation of a request sent towards AxonServer 
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\QueryRequest $query
     *           Represents an incoming Query, for which this component is expected to provide a response 
     *     @type \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryRequest $subscription_query_request
     *           Represents an incoming Subscription Query, for which this component is expected to provide a response and updates 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Confirmation of a request sent towards AxonServer 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.Confirmation confirmation = 1;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Confirmation
     */
    public function getConfirmation()
    {
        return $this->readOneof(1);
    }

    /**
     * Confirmation of a request sent towards AxonServer 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.Confirmation confirmation = 1;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Confirmation $var
     * @return $this
     */
    public function setConfirmation($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Confirmation::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Represents an incoming Query, for which this component is expected to provide a response 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QueryRequest query = 2;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\QueryRequest
     */
    public function getQuery()
    {
        return $this->readOneof(2);
    }

    /**
     * Represents an incoming Query, for which this component is expected to provide a response 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.QueryRequest query = 2;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\QueryRequest $var
     * @return $this
     */
    public function setQuery($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\QueryRequest::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Represents an incoming Subscription Query, for which this component is expected to provide a response and updates 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest subscription_query_request = 3;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryRequest
     */
    public function getSubscriptionQueryRequest()
    {
        return $this->readOneof(3);
    }

    /**
     * Represents an incoming Subscription Query, for which this component is expected to provide a response and updates 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest subscription_query_request = 3;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryRequest $var
     * @return $this
     */
    public function setSubscriptionQueryRequest($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Query\SubscriptionQueryRequest::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRequest()
    {
        return $this->whichOneof("request");
    }

}

