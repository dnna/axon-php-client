<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: event.proto

namespace Io\Axoniq\Axonserver\Grpc\Event;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message wrapping an Event and a Tracking Token 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.event.EventWithToken</code>
 */
class EventWithToken extends \Google\Protobuf\Internal\Message
{
    /**
     * The Token representing the position of this Event in the Stream 
     *
     * Generated from protobuf field <code>int64 token = 1;</code>
     */
    private $token = 0;
    /**
     * The actual Event Message 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.event.Event event = 2;</code>
     */
    private $event = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $token
     *           The Token representing the position of this Event in the Stream 
     *     @type \Io\Axoniq\Axonserver\Grpc\Event\Event $event
     *           The actual Event Message 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Event::initOnce();
        parent::__construct($data);
    }

    /**
     * The Token representing the position of this Event in the Stream 
     *
     * Generated from protobuf field <code>int64 token = 1;</code>
     * @return int|string
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * The Token representing the position of this Event in the Stream 
     *
     * Generated from protobuf field <code>int64 token = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkInt64($var);
        $this->token = $var;

        return $this;
    }

    /**
     * The actual Event Message 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.event.Event event = 2;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\Event\Event
     */
    public function getEvent()
    {
        return $this->event;
    }

    /**
     * The actual Event Message 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.event.Event event = 2;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\Event\Event $var
     * @return $this
     */
    public function setEvent($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\Event\Event::class);
        $this->event = $var;

        return $this;
    }

}

