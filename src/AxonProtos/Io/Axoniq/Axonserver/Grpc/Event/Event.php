<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: event.proto

namespace Io\Axoniq\Axonserver\Grpc\Event;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message containing the information of an Event 
 *
 * Generated from protobuf message <code>io.axoniq.axonserver.grpc.event.Event</code>
 */
class Event extends \Google\Protobuf\Internal\Message
{
    /**
     * The unique identifier of this event 
     *
     * Generated from protobuf field <code>string message_identifier = 1;</code>
     */
    private $message_identifier = '';
    /**
     * The identifier of the Aggregate instance that published this event, if any 
     *
     * Generated from protobuf field <code>string aggregate_identifier = 2;</code>
     */
    private $aggregate_identifier = '';
    /**
     * The sequence number of the Event in the Aggregate instance that published it, if any 
     *
     * Generated from protobuf field <code>int64 aggregate_sequence_number = 3;</code>
     */
    private $aggregate_sequence_number = 0;
    /**
     * The Type of the Aggregate instance that published this Event, if any 
     *
     * Generated from protobuf field <code>string aggregate_type = 4;</code>
     */
    private $aggregate_type = '';
    /**
     * The timestamp of the Event 
     *
     * Generated from protobuf field <code>int64 timestamp = 5;</code>
     */
    private $timestamp = 0;
    /**
     * The Payload of the Event 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.SerializedObject payload = 6;</code>
     */
    private $payload = null;
    /**
     * The Meta Data of the Event 
     *
     * Generated from protobuf field <code>map<string, .io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 7;</code>
     */
    private $meta_data;
    /**
     * Flag indicating whether the Event is a snapshot Event 
     *
     * Generated from protobuf field <code>bool snapshot = 8;</code>
     */
    private $snapshot = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $message_identifier
     *           The unique identifier of this event 
     *     @type string $aggregate_identifier
     *           The identifier of the Aggregate instance that published this event, if any 
     *     @type int|string $aggregate_sequence_number
     *           The sequence number of the Event in the Aggregate instance that published it, if any 
     *     @type string $aggregate_type
     *           The Type of the Aggregate instance that published this Event, if any 
     *     @type int|string $timestamp
     *           The timestamp of the Event 
     *     @type \Io\Axoniq\Axonserver\Grpc\SerializedObject $payload
     *           The Payload of the Event 
     *     @type array|\Google\Protobuf\Internal\MapField $meta_data
     *           The Meta Data of the Event 
     *     @type bool $snapshot
     *           Flag indicating whether the Event is a snapshot Event 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Event::initOnce();
        parent::__construct($data);
    }

    /**
     * The unique identifier of this event 
     *
     * Generated from protobuf field <code>string message_identifier = 1;</code>
     * @return string
     */
    public function getMessageIdentifier()
    {
        return $this->message_identifier;
    }

    /**
     * The unique identifier of this event 
     *
     * Generated from protobuf field <code>string message_identifier = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMessageIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->message_identifier = $var;

        return $this;
    }

    /**
     * The identifier of the Aggregate instance that published this event, if any 
     *
     * Generated from protobuf field <code>string aggregate_identifier = 2;</code>
     * @return string
     */
    public function getAggregateIdentifier()
    {
        return $this->aggregate_identifier;
    }

    /**
     * The identifier of the Aggregate instance that published this event, if any 
     *
     * Generated from protobuf field <code>string aggregate_identifier = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAggregateIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->aggregate_identifier = $var;

        return $this;
    }

    /**
     * The sequence number of the Event in the Aggregate instance that published it, if any 
     *
     * Generated from protobuf field <code>int64 aggregate_sequence_number = 3;</code>
     * @return int|string
     */
    public function getAggregateSequenceNumber()
    {
        return $this->aggregate_sequence_number;
    }

    /**
     * The sequence number of the Event in the Aggregate instance that published it, if any 
     *
     * Generated from protobuf field <code>int64 aggregate_sequence_number = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAggregateSequenceNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->aggregate_sequence_number = $var;

        return $this;
    }

    /**
     * The Type of the Aggregate instance that published this Event, if any 
     *
     * Generated from protobuf field <code>string aggregate_type = 4;</code>
     * @return string
     */
    public function getAggregateType()
    {
        return $this->aggregate_type;
    }

    /**
     * The Type of the Aggregate instance that published this Event, if any 
     *
     * Generated from protobuf field <code>string aggregate_type = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAggregateType($var)
    {
        GPBUtil::checkString($var, True);
        $this->aggregate_type = $var;

        return $this;
    }

    /**
     * The timestamp of the Event 
     *
     * Generated from protobuf field <code>int64 timestamp = 5;</code>
     * @return int|string
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * The timestamp of the Event 
     *
     * Generated from protobuf field <code>int64 timestamp = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkInt64($var);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * The Payload of the Event 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.SerializedObject payload = 6;</code>
     * @return \Io\Axoniq\Axonserver\Grpc\SerializedObject
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * The Payload of the Event 
     *
     * Generated from protobuf field <code>.io.axoniq.axonserver.grpc.SerializedObject payload = 6;</code>
     * @param \Io\Axoniq\Axonserver\Grpc\SerializedObject $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Io\Axoniq\Axonserver\Grpc\SerializedObject::class);
        $this->payload = $var;

        return $this;
    }

    /**
     * The Meta Data of the Event 
     *
     * Generated from protobuf field <code>map<string, .io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 7;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMetaData()
    {
        return $this->meta_data;
    }

    /**
     * The Meta Data of the Event 
     *
     * Generated from protobuf field <code>map<string, .io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 7;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMetaData($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\Axoniq\Axonserver\Grpc\MetaDataValue::class);
        $this->meta_data = $arr;

        return $this;
    }

    /**
     * Flag indicating whether the Event is a snapshot Event 
     *
     * Generated from protobuf field <code>bool snapshot = 8;</code>
     * @return bool
     */
    public function getSnapshot()
    {
        return $this->snapshot;
    }

    /**
     * Flag indicating whether the Event is a snapshot Event 
     *
     * Generated from protobuf field <code>bool snapshot = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setSnapshot($var)
    {
        GPBUtil::checkBool($var);
        $this->snapshot = $var;

        return $this;
    }

}

